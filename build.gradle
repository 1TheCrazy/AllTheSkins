plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
		content {
			includeGroup("me.djtheredstoner")
		}
	}

	// Mod Menu
	maven { url = "https://api.modrinth.com/maven" }
}

loom {
	splitEnvironmentSourceSets()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// --- NFD ---
	String nfdVersion = "3.3.3";
	// For IDE
	implementation "org.lwjgl:lwjgl-nfd:${nfdVersion}"
	// Include for builds
	include "org.lwjgl:lwjgl-nfd:${nfdVersion}"
	include "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-windows"
	include "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-windows-arm64"
	include "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-linux"
	include "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-linux-arm64"
	include "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-macos"
	include "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-macos-arm64"

	// --- For glb parsing ---
	include implementation ("de.javagl:jgltf-model:2.0.4")
	include implementation ("de.javagl:jgltf-impl-v2:2.0.4")

	// --- For Dev Env ---
	modRuntimeOnly "me.djtheredstoner:DevAuth-fabric:1.2.1"
	runtimeOnly "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-windows"
	runtimeOnly "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-windows-arm64"
	runtimeOnly "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-linux"
	runtimeOnly "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-linux-arm64"
	runtimeOnly "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-macos"
	runtimeOnly "org.lwjgl:lwjgl-nfd:${nfdVersion}:natives-macos-arm64"

	// Mod Menu
	modApi "maven.modrinth:modmenu:15.0.0-beta.3"
}

remapJar {
	archiveFileName.set("${project.archives_base_name}-v${project.mod_version}+mc${project.minecraft_version}.jar")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}